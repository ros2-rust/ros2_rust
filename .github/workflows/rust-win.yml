name: Rust ROS 2 Windows build

on:
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  #schedule:
  #  - cron: '22 2 * * 2'
  push:
    branches: [ win-ci]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    env:
      LIBCLANG_PATH: C:\pixi_ws\.pixi\envs\default\Library\bin
      RUST_BACKTRACE: 1
      RUST_LOG: debug
    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1.4.1
      - name: Make new directory environment and copy ros2_rust repo in there
        run: |
          mkdir C:\workspace\src
          mkdir C:\pixi_ws
          xcopy /E /I /Y D:\a\ros2_rust\ros2_rust C:\workspace\src\ros2_rust
      - name: Get pixi toml file
        run: irm https://raw.githubusercontent.com/ros2/ros2/refs/heads/rolling/pixi.toml -OutFile C:\pixi_ws\pixi.toml
      - name: Setup Pixi environment
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          manifest-path: C:/pixi_ws/pixi.toml
      - name: Get prebuild ROS files and unzip
        run: |
          irm https://ci.ros2.org/view/packaging/job/packaging_windows/lastSuccessfulBuild/artifact/ws/ros2-package-windows-AMD64.zip -Outfile ros2-package-windows-AMD64.zip
          Expand-Archive -Path ros2-package-windows-AMD64.zip -DestinationPath C:/pixi_ws/
      - name: Install Rust ROS prerequisites
        run: pixi add libclang --manifest-path C:\pixi_ws\pixi.toml
      - name: Rename libclang-13.dll to libclang.dll
        run: |
          $src = "C:\pixi_ws\.pixi\envs\default\Library\bin\libclang-13.dll"
          $dst = "C:\pixi_ws\.pixi\envs\default\Library\bin\libclang.dll"
          if (Test-Path $src) { Rename-Item -Path $src -NewName "libclang.dll" }
      - name: Adding Colcon to pixi as PyPI
        working-directory: C:\pixi_ws\
        run: |
          pixi add --pypi "colcon-ros-cargo@git+https://github.com/colcon/colcon-ros-cargo.git" --manifest-path C:\pixi_ws\pixi.toml
          pixi add --pypi "colcon-cargo@git+https://github.com/colcon/colcon-cargo.git" --manifest-path C:\pixi_ws\pixi.toml
      - name: Import other rolling ROS rust repos
        run: pixi run --manifest-path C:\pixi_ws\pixi.toml vcs import C:/workspace/src --input C:/workspace/src/ros2_rust/ros2_rust_rolling.repos
      - name: Build the rust package
        env:
          BINDGEN_EXTRA_CLANG_ARGS: -D_Check_return_= # to handle the clang error with the windows specific bindgen error
        run: |
          pixi update --manifest-path C:\pixi_ws\pixi.toml rust
          call C:\pixi_ws\ros2-windows\setup.bat
          pixi run --manifest-path C:\pixi_ws\pixi.toml colcon build
        working-directory: C:/workspace
        shell: cmd
